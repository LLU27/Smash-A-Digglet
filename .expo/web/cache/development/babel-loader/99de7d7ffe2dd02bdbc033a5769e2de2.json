{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ADD_SCORE = \"ADD_SCORE\";\nvar CLEAR_SCORE = 'CLEAR_SCORE';\nexport var addScore = function addScore() {\n  return {\n    type: ADD_SCORE\n  };\n};\nexport var clearScore = function clearScore() {\n  return {\n    type: CLEAR_SCORE\n  };\n};\nvar initialState = {\n  score: 0\n};\nvar scoreReducer = function scoreReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_SCORE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        score: state.score + 1\n      });\n    case CLEAR_SCORE:\n      return {\n        score: 0\n      };\n    default:\n      return state;\n  }\n};\nexport default scoreReducer;","map":{"version":3,"names":["ADD_SCORE","CLEAR_SCORE","addScore","type","clearScore","initialState","score","scoreReducer","state","action"],"sources":["/Users/llu/Desktop/solo/Smash-A-Digglet/redux/scoreReducer.js"],"sourcesContent":["const ADD_SCORE = \"ADD_SCORE\";\nconst CLEAR_SCORE ='CLEAR_SCORE'\n\nexport const addScore = () => ({\n  type: ADD_SCORE,\n});\n\nexport const clearScore = ()=>({\n  type: CLEAR_SCORE,\n})\n\n\nconst initialState = {\n  score: 0,\n};\n\nconst scoreReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_SCORE:\n      return {\n        ...state,\n        score: state.score + 1,\n      };\n    case CLEAR_SCORE:\n      return {score:0}\n    default:\n      return state;\n  }\n};\n\nexport default scoreReducer;\n"],"mappings":";;;AAAA,IAAMA,SAAS,GAAG,WAAW;AAC7B,IAAMC,WAAW,GAAE,aAAa;AAEhC,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQ;EAAA,OAAU;IAC7BC,IAAI,EAAEH;EACR,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAU;EAAA,OAAQ;IAC7BD,IAAI,EAAEF;EACR,CAAC;AAAA,CAAC;AAGF,IAAMI,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAqC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAChD,QAAQA,MAAM,CAACN,IAAI;IACjB,KAAKH,SAAS;MACZ,uCACKQ,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAC;IAE1B,KAAKL,WAAW;MACd,OAAO;QAACK,KAAK,EAAC;MAAC,CAAC;IAClB;MACE,OAAOE,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module"}