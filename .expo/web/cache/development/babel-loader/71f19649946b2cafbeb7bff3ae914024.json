{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addScore } from \"../redux/scoreReducer\";\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Square = function Square() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    moleActive = _useState2[0],\n    setMoleActive = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isGameOver = _useState4[0],\n    setGameOver = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sound = _useState6[0],\n    setSound = _useState6[1];\n  var randomTime = Math.random() * 20000;\n  var timerId;\n  var score = useSelector(function (state) {\n    return state;\n  });\n  var dispatch = useDispatch();\n  function playSound() {\n    return _playSound.apply(this, arguments);\n  }\n  function _playSound() {\n    _playSound = _asyncToGenerator(function* () {\n      console.log(\"Loading Sound\");\n      var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync(require(\"../assets/pokemon-battle.mp3\")),\n        sound = _yield$Audio$Sound$cr.sound;\n      setSound(sound);\n      console.log(\"Playing Sound\");\n      yield sound.playAsync();\n    });\n    return _playSound.apply(this, arguments);\n  }\n  useEffect(function () {\n    timerId = setInterval(function () {\n      setMoleActive(true);\n      setTimeout(function () {\n        setMoleActive(false);\n      }, 1000);\n    }, randomTime);\n    setTimeout(endGame, 10 * 1000);\n  }, []);\n  function endGame() {\n    clearInterval(timerId);\n    setGameOver(true);\n  }\n  var onPress = function onPress() {\n    dispatch(addScore());\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: moleActive ? onPress : null,\n    children: _jsx(Image, {\n      source: moleActive ? require(\"../assets/diglet.png\") : require(\"../assets/hole.png\"),\n      style: moleActive ? styles.mole : styles.square\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  square: {\n    flex: 1,\n    minWidth: 80,\n    minHeight: 80,\n    margin: 10,\n    backgroundColor: \"#rgba(0, 0, 0, 0)\",\n    width: '100%',\n    marginTop: 68\n  },\n  mole: {\n    flex: 1,\n    minWidth: 80,\n    minHeight: 80,\n    margin: 10,\n    backgroundColor: \"#rgba(0, 0, 0, 0)\",\n    width: '100%',\n    marginTop: 70\n  }\n});\nexport default Square;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","addScore","Audio","Square","moleActive","setMoleActive","isGameOver","setGameOver","sound","setSound","randomTime","Math","random","timerId","score","state","dispatch","playSound","console","log","Sound","createAsync","require","playAsync","setInterval","setTimeout","endGame","clearInterval","onPress","styles","mole","square","StyleSheet","create","flex","minWidth","minHeight","margin","backgroundColor","width","marginTop"],"sources":["/Users/llu/Desktop/solo/Smash-A-Digglet/components/Square.js"],"sourcesContent":["import { View, StyleSheet, TouchableOpacity,Image} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addScore } from \"../redux/scoreReducer\";\nimport {Audio} from 'expo-av'\n\nconst Square = () => {\n  const [moleActive, setMoleActive] = useState(false);\n  const [isGameOver, setGameOver] = useState(false);\n  const [sound, setSound] = useState();\n  const randomTime = Math.random() * 20000;\n  let timerId;\n  const score = useSelector((state) => state);\n  const dispatch = useDispatch(); \n  async function playSound() {\n    console.log(\"Loading Sound\");\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/pokemon-battle.mp3\")\n    );\n    setSound(sound);\n    console.log(\"Playing Sound\");\n    await sound.playAsync();\n  }\n\n\n\n\n  useEffect(() => {\n    timerId = setInterval(() => {\n      setMoleActive(true);\n      //after .8 second setMole to false\n      setTimeout(() => {\n        setMoleActive(false);\n      }, 1000);\n    }, randomTime);\n    //callback endGame function after 60sec\n    setTimeout(endGame, 10 * 1000);\n  }, []);\n\n  function endGame() {\n    clearInterval(timerId);\n    setGameOver(true);\n  }\n\n  const onPress = () => {\n    dispatch(addScore())\n  }\n\n\n  return (\n    <TouchableOpacity onPress={moleActive ? onPress : null}>\n      <Image source={moleActive ? require(\"../assets/diglet.png\"):require(\"../assets/hole.png\")}\n       style={moleActive ? styles.mole : styles.square}>\n      </Image>\n      </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  square: {\n    flex: 1,\n    minWidth: 80,\n    minHeight: 80,\n    margin: 10,\n    backgroundColor: \"#rgba(0, 0, 0, 0)\",\n    width:'100%',\n    marginTop:68,\n  },\n  mole: {\n    flex: 1,\n    minWidth: 80,\n    minHeight: 80,\n    margin: 10,\n    backgroundColor: \"#rgba(0, 0, 0, 0)\",\n    width:'100%',\n    marginTop:70,\n  },\n\n});\n\n\nexport default Square;\n"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ;AACjB,SAAQC,KAAK,QAAO,SAAS;AAAA;AAE7B,IAAMC,MAAM,GAAG,SAATA,MAAM,GAAS;EACnB,gBAAoCN,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CO,UAAU;IAAEC,aAAa;EAChC,iBAAkCR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CS,UAAU;IAAEC,WAAW;EAC9B,iBAA0BV,QAAQ,EAAE;IAAA;IAA7BW,KAAK;IAAEC,QAAQ;EACtB,IAAMC,UAAU,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,KAAK;EACxC,IAAIC,OAAO;EACX,IAAMC,KAAK,GAAGf,WAAW,CAAC,UAACgB,KAAK;IAAA,OAAKA,KAAK;EAAA,EAAC;EAC3C,IAAMC,QAAQ,GAAGhB,WAAW,EAAE;EAAC,SAChBiB,SAAS;IAAA;EAAA;EAAA;IAAA,+BAAxB,aAA2B;MACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,kCAAwBjB,KAAK,CAACkB,KAAK,CAACC,WAAW,CAC7CC,OAAO,gCAAgC,CACxC;QAFOd,KAAK,yBAALA,KAAK;MAGbC,QAAQ,CAACD,KAAK,CAAC;MACfU,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAMX,KAAK,CAACe,SAAS,EAAE;IACzB,CAAC;IAAA;EAAA;EAKDzB,SAAS,CAAC,YAAM;IACde,OAAO,GAAGW,WAAW,CAAC,YAAM;MAC1BnB,aAAa,CAAC,IAAI,CAAC;MAEnBoB,UAAU,CAAC,YAAM;QACfpB,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EAAEK,UAAU,CAAC;IAEde,UAAU,CAACC,OAAO,EAAE,EAAE,GAAG,IAAI,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASA,OAAO,GAAG;IACjBC,aAAa,CAACd,OAAO,CAAC;IACtBN,WAAW,CAAC,IAAI,CAAC;EACnB;EAEA,IAAMqB,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpBZ,QAAQ,CAACf,QAAQ,EAAE,CAAC;EACtB,CAAC;EAGD,OACE,KAAC,gBAAgB;IAAC,OAAO,EAAEG,UAAU,GAAGwB,OAAO,GAAG,IAAK;IAAA,UACrD,KAAC,KAAK;MAAC,MAAM,EAAExB,UAAU,GAAGkB,OAAO,wBAAwB,GAACA,OAAO,sBAAuB;MACzF,KAAK,EAAElB,UAAU,GAAGyB,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;IAAO;EACzC,EACW;AAEzB,CAAC;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BF,MAAM,EAAE;IACNG,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,mBAAmB;IACpCC,KAAK,EAAC,MAAM;IACZC,SAAS,EAAC;EACZ,CAAC;EACDV,IAAI,EAAE;IACJI,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,mBAAmB;IACpCC,KAAK,EAAC,MAAM;IACZC,SAAS,EAAC;EACZ;AAEF,CAAC,CAAC;AAGF,eAAerC,MAAM"},"metadata":{},"sourceType":"module"}